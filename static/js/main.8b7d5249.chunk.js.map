{"version":3,"sources":["Store/store.jsx","App/header.jsx","App/footer.jsx","App/pokemon.jsx","App/pokemonList.jsx","App/pokemonInfo.jsx","App/app.jsx","index.js"],"names":["Store","pagePokemons","countPokemons","isPokemonsLoading","this","countShowedPokemons","clickedPage","allPokemons","pokemons","types","clickedPokemonInfo","visibilityOn","window","location","href","indexOf","filtredPokemons","axios","get","res","data","results","resType","temp","slice","length","id","type","i","toLowerCase","console","log","pokemon","concat","map","name","url","decorate","observable","getPokemons","action","getPokemonsNamesandTypes","pok","Header","Layout","Title","Typography","Search","Input","Header1","inject","observer","props","useState","isVisible","setVisibility","setTypes","a","pokem","sort","b","clearAll","key","justify","align","to","onClick","className","style","display","placeholder","onChange","text","target","value","filter","shape","icon","size","height","title","placement","closable","onClose","visible","position","Group","options","marginRight","getMyChose","Footer","Footer1","showSizeChanger","onShowSizeChange","current","changePokemons","pageSizeOptions","defaultCurrent","total","Pokemon","index","getPokemonByID","charAt","toUpperCase","width","justifyContent","flexDirection","alignItems","alt","src","loader","unloader","List","Info","margin","marginBottom","forms","marginLeft","fontFamily","percent","showInfo","base_experience","stats","base_stat","weight","App","Content","marginTop","exact","path","component","PokemonList","PokemonInfo","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b7d5249.chunk.js","sourcesContent":["import React from 'react';\r\nimport { action, observable, decorate } from 'mobx';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Store {\r\n    pagePokemons = [];\r\n    countPokemons = null;\r\n    isPokemonsLoading = this.countPokemons == null ? true : false;\r\n    countShowedPokemons = 10;\r\n    clickedPage = 1;\r\n    allPokemons = [];\r\n    pokemons = null;\r\n    types = [];\r\n    clickedPokemonInfo = null;\r\n    visibilityOn = window.location.href.indexOf('pokedex-last')!==-1?'visible':'hiden';\r\n    filtredPokemons = [];\r\n\r\n\r\n    async getPokemons() {\r\n        this.countPokemons = null;\r\n        let res = await axios.get(`https://pokeapi.co/api/v2/pokemon/?offset=${((this.clickedPage - 1) * this.countShowedPokemons)}&limit=${this.countShowedPokemons}/`);\r\n        this.pagePokemons = res.data.results;\r\n        this.countPokemons = 807;\r\n        this.isPokemonsLoading = false;\r\n    }\r\n\r\n    async getPokemonsNamesandTypes() {\r\n        this.countPokemons = null;\r\n        this.isPokemonsLoading = true;\r\n        let res = await axios.get(`https://pokeapi.co/api/v2/pokemon/?limit=807/`);\r\n        this.allPokemons = res.data.results;\r\n        this.filtredPokemons = this.allPokemons;\r\n        let resType = await axios.get(`https://pokeapi.co/api/v2/type/`);\r\n        this.types = resType.data.results;\r\n        this.countPokemons = 807;\r\n        this.isPokemonsLoading = false;\r\n    }\r\n\r\n    changePokemons() {\r\n        this.countPokemons = null;\r\n        let temp = (this.clickedPage - 1) * this.countShowedPokemons;\r\n        this.pagePokemons = this.pokemons.slice(temp, temp + this.countShowedPokemons);\r\n        this.countPokemons = this.pokemons.length;\r\n        this.visibilityOn = window.location.href.indexOf('pokedex-last')!==-1?'visible':'hiden';\r\n        this.isPokemonsLoading = false;\r\n    }\r\n\r\n    async getPokemonByID(id) {\r\n        this.isPokemonsLoading = true;\r\n        let res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}/`);\r\n        this.clickedPokemonInfo = res.data;\r\n        this.isPokemonsLoading = false;\r\n    }\r\n\r\n    async getMyChose(type) {\r\n        this.isPokemonsLoading = true;\r\n        if (type.length === 0) {\r\n            this.pokemons = this.allPokemons;\r\n            this.filtredPokemons = this.pokemons;\r\n        }\r\n        else {\r\n            for (let i = 0; i < type.length; i++) {\r\n                let res = await axios.get(`https://pokeapi.co/api/v2/type/${type[i].toLowerCase()}/`);\r\n                console.log(res);\r\n                if (i === 0) {\r\n                    this.pokemons = null;\r\n                    this.pokemons = res.data.pokemon;\r\n                }\r\n                else {\r\n                    this.pokemons.concat(res.data.pokemon);\r\n                }\r\n            }\r\n            this.pokemons = this.pokemons.map(pokemon => { return { name: pokemon.pokemon.name, url: pokemon.pokemon.url } });\r\n            this.filtredPokemons = this.pokemons;\r\n        }\r\n        this.pagePokemons = this.pokemons.slice(0, this.countShowedPokemons);\r\n        this.countPokemons = this.pokemons.length;\r\n        this.isPokemonsLoading = false;\r\n    }\r\n\r\n}\r\ndecorate(Store, {\r\n    pagePokemons: observable,\r\n    isPokemonsLoading: observable,\r\n    clickedPage: observable,\r\n    countPokemons: observable,\r\n    countShowedPokemons: observable,\r\n    allPokemons: observable,\r\n    types: observable,\r\n    clickedPokemonInfo: observable,\r\n    visibilityOn: observable,\r\n    filtredPokemons: observable,\r\n\r\n    getPokemons: action,\r\n    getPokemonsNamesandTypes: action,\r\n})\r\n\r\nconst pok = new Store();\r\npok.getPokemons();\r\npok.getPokemonsNamesandTypes();\r\n\r\nexport default pok;\r\nexport { Store };","import React, { useState } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport {\r\n    Row,\r\n    Layout,\r\n    Typography,\r\n    Button,\r\n    Input,\r\n    Drawer,\r\n    Checkbox,\r\n} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../Style/header.css';\r\n\r\nconst { Header } = Layout;\r\nconst { Title } = Typography;\r\nconst { Search } = Input;\r\n\r\nlet Header1 = inject('Store')(observer(\r\n    function Main(props) {\r\n        const [isVisible, setVisibility] = useState(false);\r\n        const [types, setTypes] = useState([]);\r\n        const pokemonTypes = ['Normal', 'Fire', 'Water', 'Grass', 'Electric', 'Ice',\r\n         'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic',\r\n          'Bug', 'Rock', 'Ghost', 'Dark', 'Dragon', 'Steel', 'Fairy'];\r\n\r\n\r\n        const searcher = (text) => {\r\n            if (text.target.value.length === 0) {\r\n                props.Store.pagePokemons = props.pokemons === null?props.Store.allPokemons\r\n                    .slice(0, props.Store.countShowedPokemons):props.Store.filtredPokemons\r\n                    .slice(0, props.Store.countShowedPokemons);\r\n                return;\r\n            }\r\n            props.Store.pokemons = (props.pokemons === null ? props.Store.allPokemons : props.Store.filtredPokemons)\r\n                .filter(pokemon => {\r\n                    return pokemon.name.indexOf(text.target.value.toLowerCase()) >= 0;\r\n                });\r\n            props.Store.pagePokemons = props.Store.pokemons.slice(0, props.Store.countShowedPokemons);\r\n            props.Store.countPokemons = props.Store.pokemons.length;\r\n            console.log(text.target.value);\r\n        }\r\n        async function sorter() {\r\n            console.log(props.Store.allPokemons);\r\n            let pokem = await props.Store.allPokemons;\r\n            props.Store.pokemons = await pokem.sort((a, b) => { return a.name > b.name ? 1 : a.name === b.name ? 0 : -1; });\r\n            props.Store.pagePokemons = props.Store.pokemons.slice(0, props.Store.countShowedPokemons);\r\n        }\r\n\r\n        function clearAll() {\r\n            let pokem = props.Store.allPokemons;\r\n            props.Store.pokemons = pokem;\r\n            props.Store.filtredPokemons = pokem;\r\n            props.Store.pagePokemons = props.Store.pokemons.slice(0, props.Store.countShowedPokemons);\r\n        }\r\n        \r\n\r\n\r\n        return (\r\n\r\n            <Header key='header'>\r\n                <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                    <Title><Link to='/pokedex-last/' onClick={clearAll}> Pokemonchiki </Link></Title>\r\n                    <div className='searchField' style={{ display: props.Store.visibilityOn }}>\r\n                        <Search placeholder=\"Input name of pokemon\" onChange={searcher} />\r\n                    </div>\r\n                    <div style={{ display: props.Store.visibilityOn }}>\r\n                        <Button type=\"primary\" shape=\"circle\" icon=\"filter\" size='large' onClick={() => setVisibility(true)} />\r\n                        <Button type=\"primary\" shape=\"circle\" icon=\"sort-ascending\" size='large' onClick={sorter} />\r\n                        <Button type=\"primary\" shape=\"circle\" icon=\"rollback\" size='large' onClick={clearAll} />\r\n                    </div>\r\n                </Row>\r\n                <Drawer\r\n                    height={'50vh'}\r\n                    key='drawer'\r\n                    title=\"Filter\"\r\n                    placement=\"right\"\r\n                    closable={false}\r\n                    onClose={() => setVisibility(false)}\r\n                    visible={isVisible}\r\n                    closable={false}\r\n                    style={{ position: 'absolute', }}\r\n\r\n                >\r\n                    <p>Chose types of pokemons: </p>\r\n                    <div className='types'>\r\n                        <Checkbox.Group \r\n                        options={pokemonTypes}\r\n                        onChange = {(value) => setTypes(value)}\r\n                        value = {types}>\r\n                            {/* {showCheckBoxItems()} */}\r\n                        </Checkbox.Group>\r\n                    </div>\r\n                    <Button type='primary' size='large' style={{ marginRight: 30 }} onClick = { () => {\r\n                        props.Store.getMyChose(types);\r\n                        setVisibility(false);\r\n                        }}>Search</Button>\r\n                    <Button type='primary' size='large' onClick = { () => setVisibility(false)}>Cancel</Button>\r\n                </Drawer>\r\n            </Header>);\r\n    }\r\n)\r\n)\r\nexport default Header1;\r\n","import React from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Pagination, Layout } from 'antd';\r\n\r\nimport '../Style/footer.css';\r\n\r\nconst { Footer } = Layout;\r\n\r\nlet Footer1 = inject('Store')(observer(\r\n    function Main(props) {\r\n\r\n        const changePage = (value) => {\r\n            props.Store.clickedPage = value;\r\n            if (props.Store.pokemons === null) {\r\n                props.Store.getPokemons();\r\n            }\r\n            else {\r\n                props.Store.changePokemons();\r\n            }\r\n        }\r\n\r\n        const changeSize = (current, value) => {\r\n            props.Store.countShowedPokemons = value;\r\n            if (props.Store.pokemons === null) {\r\n                props.Store.getPokemons();\r\n            }\r\n            else {\r\n                props.Store.changePokemons();\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Footer key='pagination'>\r\n                <Pagination\r\n                    showSizeChanger\r\n                    onShowSizeChange={changeSize}\r\n                    pageSizeOptions={['10', '20', '50']}\r\n                    defaultCurrent={props.Store.clickedPage}\r\n                    total={props.Store.countPokemons}\r\n                    onChange={changePage}\r\n                    style = {{display: props.Store.visibilityOn==='flex'?'inline':'none'}}\r\n                />\r\n            </Footer>\r\n        );\r\n    }\r\n)\r\n)\r\n\r\nexport default Footer1;","import React from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n    Card,\r\n    Spin\r\n} from 'antd';\r\nimport Img from 'react-image';\r\n\r\n\r\nlet Pokemon = inject('Store')(observer(\r\n    function Main(props) {\r\n        // console.log(props.pokemon);\r\n        let index = props.pokemon.url.slice(34, -1);\r\n        return (<div>\r\n            {!(index)? '' :\r\n            <Link to = '/pokemon'>\r\n                    <Card\r\n                        onClick = {() => {\r\n                            props.Store.getPokemonByID(index);\r\n                            props.Store.visibilityOn = 'hidden';\r\n                        }}\r\n                        key={props.pokemon.name}\r\n                        title={('#' + index + ' ' + (props.pokemon.name.charAt(0).toUpperCase() + props.pokemon.name.slice(1)))}\r\n                        style={{ width: 250, display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center' }}>\r\n                        <Img\r\n                            alt=''\r\n                            key={props.pokemon.name}\r\n                            src={`https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${index}.png?raw=true`}\r\n                            loader={<Spin size='large' \r\n                            style={{ \r\n                                width: 180, \r\n                                height: 180, \r\n                                display: 'flex', \r\n                                justifyContent: 'center', \r\n                                alignItems: 'center',\r\n                            }} />}\r\n                            unloader={<img src = '../images/noimageavailable.png' alt = '' style={{ width: 180, height: 180 }}/>}\r\n                            style={{ width: 180, height: 180 }}\r\n                        />\r\n                    </Card>\r\n                    </Link>\r\n                }\r\n        </div>\r\n        );\r\n    }\r\n)\r\n)\r\nexport default Pokemon;","import React from 'react'\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport Pokemon from './pokemon.jsx';\r\n\r\n\r\nlet List = inject('Store')(observer(\r\n    function Main(props) {\r\n        props.Store.visibilityOn = window.location.href.indexOf('pokedex-last')!==-1?'flex':'none';\r\n\r\n        return (\r\n\r\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\r\n                {props.Store.pagePokemons.map((pokemon) => (\r\n                    <Col key={pokemon.name}><Pokemon pokemon={pokemon} /></Col>\r\n                ))}\r\n            </Row>\r\n            );\r\n    }\r\n)\r\n)\r\nexport default List;","import React from 'react'\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Spin, Card, Progress, Button } from 'antd';\r\nimport Img from 'react-image';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Max HP: 255\r\n// Max Attack: 180\r\n// Max deffense: 230\r\n// Max speed: 180\r\n// Max sp attack: 180\r\n// Max sp deffense: 230\r\n// Max total: 720\r\n\r\n\r\n\r\n\r\nlet Info = inject('Store')(observer(\r\n    function Main(props) {\r\n        console.log(props.Store.clickedPokemonInfo);\r\n        const back = '<<-- Back';\r\n        props.Store.visibilityOn = window.location.href.indexOf('pokedex-last')!==-1?'flex':'none';\r\n        return (\r\n            <div style = {{display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}>\r\n                <Link to='/pokedex-last/'>\r\n                    <Button \r\n                    type='primary' \r\n                    size='large'\r\n                    style={{ margin: 'auto', marginBottom: 20 }}\r\n                    onClick = {() => props.Store.visibilityOn = 'visible'}\r\n                    >\r\n                    {back}\r\n                    </Button>\r\n                </Link>\r\n                {props.Store.clickedPokemonInfo ?\r\n                    <div style = {{width: '90%'}}>\r\n                        <Card\r\n                            key={props.Store.clickedPokemonInfo.forms[0].name}\r\n                            title={props.Store.clickedPokemonInfo.forms[0].name.charAt(0).toUpperCase()\r\n                                + props.Store.clickedPokemonInfo.forms[0].name.slice(1)}\r\n                            style={{ marginRight: '10vw', marginLeft: '10vw', fontFamily: 'Comic Sans MS' }}\r\n                        >\r\n                            {/* {props.Store.clickedPokemonInfo.id} */}\r\n                            <Img\r\n                                alt=''\r\n                                src={`https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${props.Store.clickedPokemonInfo.id}.png?raw=true`}\r\n                                loader={<Spin size='large' style={{ width: 180, height: 180 }} />}\r\n                                unloader={<Spin size='large' style={{ width: 180, height: 180 }} />}\r\n                                className = 'imagePokemon'\r\n                            />\r\n                            <div>\r\n                                <p>Height: {props.Store.clickedPokemonInfo.height}</p>\r\n                                <Progress percent={props.Store.clickedPokemonInfo.height / 55 * 100} showInfo={false} />\r\n                                <p>Base experience: {props.Store.clickedPokemonInfo.base_experience}</p>\r\n                                <Progress percent={props.Store.clickedPokemonInfo.base_experience / 281 * 100} showInfo={false} />\r\n                                <p>Speed: {props.Store.clickedPokemonInfo.stats[0].base_stat}</p>\r\n                                <Progress percent={props.Store.clickedPokemonInfo.stats[0].base_stat / 180 * 100} showInfo={false} />\r\n                                <p>Special deffence: {props.Store.clickedPokemonInfo.stats[1].base_stat}</p>\r\n                                <Progress percent={props.Store.clickedPokemonInfo.stats[1].base_stat / 230 * 100} showInfo={false} />\r\n                                <p>Special attack: {props.Store.clickedPokemonInfo.stats[2].base_stat}</p>\r\n                                <Progress percent={props.Store.clickedPokemonInfo.stats[2].base_stat / 180 * 100} showInfo={false} />\r\n                                <p>Deffence: {props.Store.clickedPokemonInfo.stats[3].base_stat}</p>\r\n                                <Progress percent={props.Store.clickedPokemonInfo.stats[3].base_stat / 230 * 100} showInfo={false} />\r\n                                <p>Attack: {props.Store.clickedPokemonInfo.stats[4].base_stat}</p>\r\n                                <Progress percent={props.Store.clickedPokemonInfo.stats[4].base_stat / 181 * 100} showInfo={false} />\r\n                                <p>HP: {props.Store.clickedPokemonInfo.stats[5].base_stat}</p>\r\n                                <Progress percent={props.Store.clickedPokemonInfo.stats[5].base_stat / 255 * 100} showInfo={false} />\r\n                                <p>Weight: {props.Store.clickedPokemonInfo.weight}</p>\r\n                                <Progress percent={props.Store.clickedPokemonInfo.weight / 9999 * 100} showInfo={false} />\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    :\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        flexDirection: 'column'\r\n                    }}>\r\n                    <Spin\r\n                        size='large'\r\n                    /></div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n)\r\n)\r\nexport default Info;","import React from 'react'\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Layout, Spin, Alert } from 'antd';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport HeaderFile from './header.jsx';\r\nimport FooterFile from './footer.jsx';\r\nimport PokemonList from './pokemonList.jsx';\r\nimport PokemonInfo from './pokemonInfo.jsx';\r\n\r\nimport '../Style/app.css'\r\n\r\nlet App = inject('Store')(observer(\r\n    function Main(props) {\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <Layout>\r\n                    <Layout.Header className='headerElement'>\r\n                        <HeaderFile />\r\n                    </Layout.Header>\r\n                    <Layout.Content>\r\n                        {props.Store.isPokemonsLoading ?\r\n                            (<Spin size='large' key=\"spinner\" style={{ \r\n                                marginTop: '20vh',\r\n                                display: 'flex', \r\n                                justifyContent: 'center', \r\n                                alignItems: 'center',\r\n                            }}/>)\r\n                            :\r\n                            (\r\n                                <div>\r\n                                    <Route exact path='/pokedex-last/' component={PokemonList} />\r\n                                    <Route exact path='/pokemon/' component={PokemonInfo} />\r\n                                </div>\r\n                            )}\r\n                    </Layout.Content>\r\n                    <Layout.Footer className='pagination'>\r\n                        <FooterFile />\r\n                    </Layout.Footer>\r\n                </Layout>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n)\r\n)\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'mobx-react';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Store from './Store/store.jsx'\r\nimport App from './App/app.jsx';\r\n\r\nconst store = {Store}\r\n\r\nReactDOM.render(\r\n    <Provider {...store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}